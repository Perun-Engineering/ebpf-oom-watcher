name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.set-outputs.outputs.should-release }}
      new-version: ${{ steps.set-outputs.outputs.new-version }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: Run semantic-release
        id: semantic-release
        run: |
          npx semantic-release --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: set-outputs
        run: |
          if git tag --points-at HEAD | grep -q "v"; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "new-version=$(git tag --points-at HEAD | head -1 | sed 's/^v//')" >> $GITHUB_OUTPUT
          else
            echo "should-release=false" >> $GITHUB_OUTPUT
            echo "new-version=" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-release == 'true'
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.detect-changes.outputs.new-version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.detect-changes.outputs.new-version }}
            type=semver,pattern={{major}},value=${{ needs.detect-changes.outputs.new-version }}
            type=raw,value=latest

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile.production
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  helm-package:
    name: Package and Push Helm Chart
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push]
    if: needs.detect-changes.outputs.should-release == 'true'
    steps:
      - uses: actions/checkout@v5

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: 3.13.0

      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Update Helm chart version and appVersion
        run: |
          VERSION=${{ needs.detect-changes.outputs.new-version }}
          sed -i "s/^version:.*/version: ${VERSION}/" helm/oom-watcher/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" helm/oom-watcher/Chart.yaml
          sed -i "s|repository:.*|repository: ghcr.io/${{ github.repository }}|" helm/oom-watcher/values.yaml
          sed -i "s/tag:.*/tag: \"${VERSION}\"/" helm/oom-watcher/values.yaml

      - name: Package Helm chart
        run: |
          helm package helm/oom-watcher --destination .

      - name: Push Helm chart
        run: |
          VERSION=${{ needs.detect-changes.outputs.new-version }}
          helm push oom-watcher-${VERSION}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [detect-changes, build-and-push, helm-package]
    if: needs.detect-changes.outputs.should-release == 'true'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: Create .releaserc.json
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              [
                "@semantic-release/changelog",
                {
                  "changelogFile": "CHANGELOG.md"
                }
              ],
              [
                "@semantic-release/github",
                {
                  "assets": [],
                  "draftRelease": true
                }
              ]
            ]
          }
          EOF

      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
