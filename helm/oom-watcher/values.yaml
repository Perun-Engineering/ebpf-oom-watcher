image:
  repository: ghcr.io/perun-engineering/ebpf-oom-watcher
  pullPolicy: IfNotPresent
  tag: "0.1.0"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: true
  capabilities:
    add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 64Mi

nodeSelector: {}

tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule

affinity: {}

env:
  metricsPort: 8080
  logLevel: info

service:
  type: ClusterIP
  port: 8080
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"

serviceMonitor:
  enabled: false
  interval: 30s
  path: /metrics
  labels: {}
  annotations: {}

hostPaths:
  proc: /proc
  sys: /sys
  debugfs: /sys/kernel/debug
  cgroup: /sys/fs/cgroup

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

priorityClassName: ""

terminationGracePeriodSeconds: 30
